# RUN: not --crash llc -mtriple=amdgcn-- -run-pass=machineverifier -o /dev/null %s 2>&1 | FileCheck %s
---
name:            cycles
body:             |
  bb.0:
    %0:_(s0) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.experimental.convergence.anchor)
    %1:_(s1) = IMPLICIT_DEF
    %2:_(s1) = IMPLICIT_DEF
    G_BRCOND %2:_(s1), %bb.9
    G_BR %bb.1

  bb.1:
    G_BRCOND %2:_(s1), %bb.8
    G_BR %bb.5

  bb.2:
    G_BRCOND %2:_(s1), %bb.3
    G_BR %bb.4

  bb.3:
    ; CHECK: Cycle heart must dominate all blocks in the cycle.
    ; Irreducible cycle: entries(bb.4 bb.3)
    %3:_(s0) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.experimental.convergence.loop), implicit %0:_(s0)
    G_BR %bb.4

  bb.4:
    G_BR %bb.3

  bb.5:
    G_BRCOND %2:_(s1), %bb.6
    G_BR %bb.2

  bb.6:
    G_BR %bb.7

  bb.7:
    ; CHECK: Cycle heart must dominate all blocks in the cycle.
    ; Reducible cycle: entries(bb.6) bb.7
    %4:_(s0) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.experimental.convergence.loop), implicit %0:_(s0)
    G_BR %bb.6

  bb.8:
    ; CHECK: Two static convergence token uses in a cycle that does not contain either token's definition.
    %5:_(s0) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.experimental.convergence.loop), implicit %0:_(s0)
    %6:_(s0) = G_INTRINSIC_CONVERGENT intrinsic(@llvm.experimental.convergence.loop), implicit %0:_(s0)
    G_BR %bb.8

  bb.9:
    ; CHECK: Convergence token used by an instruction other than llvm.experimental.convergence.loop in a cycle that does not contain the token's definition.
    %7:sgpr_64 = G_SI_CALL %1:_(s1), 3, implicit %0:_(s0)
    G_BR %bb.9

...
