# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 2
# RUN: llc -mtriple=x86_64-- -run-pass=fastpretileconfig -o - %s | FileCheck %s

# GlobalIsel doesn't use all virtual registers and there may be virtual
# registers without class.
# Note that %3 doesn't have a class.
--- |
  define i64 @f(i64 %0, i64 %1) {
  entry:
    %2 = lshr i64 %0, %1
    %3 = add i64 %2, 123456789
    ret i64 %3
  }

...
---
name:            f
legalized:       true
regBankSelected: true
selected:        true
failedISel:      false
tracksRegLiveness: true
registers:
  - { id: 0, class: gr64, preferred-register: '' }
  - { id: 1, class: gr64_with_sub_8bit, preferred-register: '' }
  - { id: 2, class: gr64, preferred-register: '' }
  - { id: 3, class: gpr, preferred-register: '' }
  - { id: 4, class: gr64, preferred-register: '' }
  - { id: 5, class: gr8, preferred-register: '' }
liveins:
  - { reg: '$rdi', virtual-reg: '' }
  - { reg: '$rsi', virtual-reg: '' }
body:             |
  bb.1.entry:
    liveins: $rdi, $rsi

    ; CHECK-LABEL: name: f
    ; CHECK: liveins: $rdi, $rsi
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gr64 = COPY $rdi
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gr64_with_sub_8bit = COPY $rsi
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gr8 = COPY [[COPY1]].sub_8bit
    ; CHECK-NEXT: $cl = COPY [[COPY2]]
    ; CHECK-NEXT: [[SHR64rCL:%[0-9]+]]:gr64 = SHR64rCL [[COPY]], implicit-def $eflags, implicit $cl
    ; CHECK-NEXT: [[ADD64ri32_:%[0-9]+]]:gr64 = ADD64ri32 [[SHR64rCL]], 123456789, implicit-def $eflags
    ; CHECK-NEXT: $rax = COPY [[ADD64ri32_]]
    ; CHECK-NEXT: RET 0, implicit $rax
    %0:gr64 = COPY $rdi
    %1:gr64_with_sub_8bit = COPY $rsi
    %5:gr8 = COPY %1.sub_8bit
    $cl = COPY %5
    %2:gr64 = SHR64rCL %0, implicit-def $eflags, implicit $cl
    %4:gr64 = ADD64ri32 %2, 123456789, implicit-def $eflags
    $rax = COPY %4
    RET 0, implicit $rax

...
