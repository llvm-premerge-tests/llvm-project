# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 2
# RUN: llc -march=riscv64 -x mir -run-pass=prologepilog -stack-symbol-ordering=0 \
# RUN: -verify-machineinstrs < %s | FileCheck -check-prefixes=CHECK-RV64-NO-REORDER %s
# RUN: llc -march=riscv64 -x mir -run-pass=prologepilog \
# RUN: -verify-machineinstrs < %s | FileCheck -check-prefixes=CHECK-RV64-REORDER %s
--- |

  define dso_local void @_Z12stack_use_spv() local_unnamed_addr #0 {
  entry:
    ret void
  }

  declare dso_local void @_Z7callee0Pi(ptr noundef) local_unnamed_addr #0

  declare dso_local void @_Z7callee1Pc(ptr noundef) local_unnamed_addr #0

  define dso_local void @_Z12stack_use_fpjj(i32 noundef signext %m, i32 noundef signext %n) local_unnamed_addr #0 {
  entry:
    ret void
  }

  attributes #0 = { minsize optsize }

...
---
name:            _Z12stack_use_spv
alignment:       2
tracksRegLiveness: true
tracksDebugUserValues: true
frameInfo:
  maxAlignment:    4
  hasCalls:        true
  localFrameSize:  2072
stack:
  - { id: 0, size: 4, alignment: 4, local-offset: -4 }
  - { id: 1, size: 1, alignment: 1, local-offset: -5 }
  - { id: 2, size: 16, alignment: 4, local-offset: -24 }
  - { id: 3, size: 2048, alignment: 4, local-offset: -2072 }
machineFunctionInfo:
  varArgsFrameIndex: 0
  varArgsSaveSize: 0
body:             |
  bb.0.entry:
    ; CHECK-RV64-NO-REORDER-LABEL: name: _Z12stack_use_spv
    ; CHECK-RV64-NO-REORDER: liveins: $x1
    ; CHECK-RV64-NO-REORDER-NEXT: {{  $}}
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -2032
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 2032
    ; CHECK-RV64-NO-REORDER-NEXT: SD killed $x1, $x2, 2024 :: (store (s64) into %stack.4)
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x1, -8
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -64
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 2096
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 2047
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, 37
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 2047
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, 36
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee1Pc, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 2047
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, 17
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 2047
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, 17
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 2047
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, 17
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 2047
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, 17
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 2047
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, 17
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x2, 16
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 64
    ; CHECK-RV64-NO-REORDER-NEXT: $x1 = LD $x2, 2024 :: (load (s64) from %stack.4)
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 2032
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoRET
    ;
    ; CHECK-RV64-REORDER-LABEL: name: _Z12stack_use_spv
    ; CHECK-RV64-REORDER: liveins: $x1
    ; CHECK-RV64-REORDER-NEXT: {{  $}}
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -2032
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 2032
    ; CHECK-RV64-REORDER-NEXT: SD killed $x1, $x2, 2024 :: (store (s64) into %stack.4)
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x1, -8
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -64
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 2096
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 36
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 19
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee1Pc, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 20
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 20
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 20
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 20
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 20
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x2, 40
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 64
    ; CHECK-RV64-REORDER-NEXT: $x1 = LD $x2, 2024 :: (load (s64) from %stack.4)
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 2032
    ; CHECK-RV64-REORDER-NEXT: PseudoRET
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.0, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.1, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee1Pc, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.2, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.2, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.2, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.2, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.2, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.3, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit killed $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    PseudoRET

...
---
name:            _Z12stack_use_fpjj
alignment:       2
tracksRegLiveness: true
tracksDebugUserValues: true
liveins:
  - { reg: '$x10' }
  - { reg: '$x11' }
frameInfo:
  maxAlignment:    4
  hasCalls:        true
  localFrameSize:  2068
stack:
  - { id: 0, size: 2064, alignment: 4, local-offset: -2064 }
  - { id: 1, size: 4, alignment: 4, local-offset: -2068 }
  - { id: 2, type: variable-sized, alignment: 1, local-offset: -2068 }
  - { id: 3, type: variable-sized, alignment: 1, local-offset: -2068 }
machineFunctionInfo:
  varArgsFrameIndex: 0
  varArgsSaveSize: 0
body:             |
  bb.0.entry:
    liveins: $x10, $x11

    ; CHECK-RV64-NO-REORDER-LABEL: name: _Z12stack_use_fpjj
    ; CHECK-RV64-NO-REORDER: liveins: $x10, $x11, $x1, $x9, $x18, $x19
    ; CHECK-RV64-NO-REORDER-NEXT: {{  $}}
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -2032
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 2032
    ; CHECK-RV64-NO-REORDER-NEXT: SD killed $x1, $x2, 2024 :: (store (s64) into %stack.4)
    ; CHECK-RV64-NO-REORDER-NEXT: SD killed $x8, $x2, 2016 :: (store (s64) into %stack.5)
    ; CHECK-RV64-NO-REORDER-NEXT: SD killed $x9, $x2, 2008 :: (store (s64) into %stack.6)
    ; CHECK-RV64-NO-REORDER-NEXT: SD killed $x18, $x2, 2000 :: (store (s64) into %stack.7)
    ; CHECK-RV64-NO-REORDER-NEXT: SD killed $x19, $x2, 1992 :: (store (s64) into %stack.8)
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x1, -8
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x8, -16
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x9, -24
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x18, -32
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x19, -40
    ; CHECK-RV64-NO-REORDER-NEXT: $x8 = frame-setup ADDI $x2, 2032
    ; CHECK-RV64-NO-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa $x8, 0
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -96
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x19 = COPY $x2
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x10 = SLLI killed renamable $x10, 32
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x10 = SRLI killed renamable $x10, 30
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x10 = nuw ADDI killed renamable $x10, 15
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x10 = ANDI killed renamable $x10, -16
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x18 = SUB $x2, killed renamable $x10
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = COPY renamable $x18
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x11 = SLLI killed renamable $x11, 32
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x11 = SRLI killed renamable $x11, 30
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x11 = nuw ADDI killed renamable $x11, 15
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x11 = ANDI killed renamable $x11, -16
    ; CHECK-RV64-NO-REORDER-NEXT: renamable $x9 = SUB $x2, killed renamable $x11
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = COPY renamable $x9
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x8, -2048
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, -64
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = COPY killed renamable $x18
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = COPY killed renamable $x9
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI $x8, -2048
    ; CHECK-RV64-NO-REORDER-NEXT: $x10 = ADDI killed $x10, -68
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = COPY killed renamable $x19
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-destroy ADDI $x8, -2048
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-destroy ADDI killed $x2, -80
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 96
    ; CHECK-RV64-NO-REORDER-NEXT: $x1 = LD $x2, 2024 :: (load (s64) from %stack.4)
    ; CHECK-RV64-NO-REORDER-NEXT: $x8 = LD $x2, 2016 :: (load (s64) from %stack.5)
    ; CHECK-RV64-NO-REORDER-NEXT: $x9 = LD $x2, 2008 :: (load (s64) from %stack.6)
    ; CHECK-RV64-NO-REORDER-NEXT: $x18 = LD $x2, 2000 :: (load (s64) from %stack.7)
    ; CHECK-RV64-NO-REORDER-NEXT: $x19 = LD $x2, 1992 :: (load (s64) from %stack.8)
    ; CHECK-RV64-NO-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 2032
    ; CHECK-RV64-NO-REORDER-NEXT: PseudoRET
    ;
    ; CHECK-RV64-REORDER-LABEL: name: _Z12stack_use_fpjj
    ; CHECK-RV64-REORDER: liveins: $x10, $x11, $x1, $x9, $x18, $x19
    ; CHECK-RV64-REORDER-NEXT: {{  $}}
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -2032
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa_offset 2032
    ; CHECK-RV64-REORDER-NEXT: SD killed $x1, $x2, 2024 :: (store (s64) into %stack.4)
    ; CHECK-RV64-REORDER-NEXT: SD killed $x8, $x2, 2016 :: (store (s64) into %stack.5)
    ; CHECK-RV64-REORDER-NEXT: SD killed $x9, $x2, 2008 :: (store (s64) into %stack.6)
    ; CHECK-RV64-REORDER-NEXT: SD killed $x18, $x2, 2000 :: (store (s64) into %stack.7)
    ; CHECK-RV64-REORDER-NEXT: SD killed $x19, $x2, 1992 :: (store (s64) into %stack.8)
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x1, -8
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x8, -16
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x9, -24
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x18, -32
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION offset $x19, -40
    ; CHECK-RV64-REORDER-NEXT: $x8 = frame-setup ADDI $x2, 2032
    ; CHECK-RV64-REORDER-NEXT: frame-setup CFI_INSTRUCTION def_cfa $x8, 0
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-setup ADDI $x2, -96
    ; CHECK-RV64-REORDER-NEXT: renamable $x19 = COPY $x2
    ; CHECK-RV64-REORDER-NEXT: renamable $x10 = SLLI killed renamable $x10, 32
    ; CHECK-RV64-REORDER-NEXT: renamable $x10 = SRLI killed renamable $x10, 30
    ; CHECK-RV64-REORDER-NEXT: renamable $x10 = nuw ADDI killed renamable $x10, 15
    ; CHECK-RV64-REORDER-NEXT: renamable $x10 = ANDI killed renamable $x10, -16
    ; CHECK-RV64-REORDER-NEXT: renamable $x18 = SUB $x2, killed renamable $x10
    ; CHECK-RV64-REORDER-NEXT: $x2 = COPY renamable $x18
    ; CHECK-RV64-REORDER-NEXT: renamable $x11 = SLLI killed renamable $x11, 32
    ; CHECK-RV64-REORDER-NEXT: renamable $x11 = SRLI killed renamable $x11, 30
    ; CHECK-RV64-REORDER-NEXT: renamable $x11 = nuw ADDI killed renamable $x11, 15
    ; CHECK-RV64-REORDER-NEXT: renamable $x11 = ANDI killed renamable $x11, -16
    ; CHECK-RV64-REORDER-NEXT: renamable $x9 = SUB $x2, killed renamable $x11
    ; CHECK-RV64-REORDER-NEXT: $x2 = COPY renamable $x9
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x8, -2048
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI killed $x10, -68
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = COPY killed renamable $x18
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = COPY killed renamable $x9
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x10 = ADDI $x8, -52
    ; CHECK-RV64-REORDER-NEXT: PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ; CHECK-RV64-REORDER-NEXT: $x2 = COPY killed renamable $x19
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-destroy ADDI $x8, -2048
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-destroy ADDI killed $x2, -80
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 96
    ; CHECK-RV64-REORDER-NEXT: $x1 = LD $x2, 2024 :: (load (s64) from %stack.4)
    ; CHECK-RV64-REORDER-NEXT: $x8 = LD $x2, 2016 :: (load (s64) from %stack.5)
    ; CHECK-RV64-REORDER-NEXT: $x9 = LD $x2, 2008 :: (load (s64) from %stack.6)
    ; CHECK-RV64-REORDER-NEXT: $x18 = LD $x2, 2000 :: (load (s64) from %stack.7)
    ; CHECK-RV64-REORDER-NEXT: $x19 = LD $x2, 1992 :: (load (s64) from %stack.8)
    ; CHECK-RV64-REORDER-NEXT: $x2 = frame-destroy ADDI $x2, 2032
    ; CHECK-RV64-REORDER-NEXT: PseudoRET
    renamable $x19 = COPY $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    renamable $x10 = SLLI killed renamable $x10, 32
    renamable $x10 = SRLI killed renamable $x10, 30
    renamable $x10 = nuw ADDI killed renamable $x10, 15
    renamable $x10 = ANDI killed renamable $x10, -16
    renamable $x18 = SUB $x2, killed renamable $x10
    $x2 = COPY renamable $x18
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    renamable $x11 = SLLI killed renamable $x11, 32
    renamable $x11 = SRLI killed renamable $x11, 30
    renamable $x11 = nuw ADDI killed renamable $x11, 15
    renamable $x11 = ANDI killed renamable $x11, -16
    renamable $x9 = SUB $x2, killed renamable $x11
    $x2 = COPY renamable $x9
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.0, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = COPY killed renamable $x18
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = COPY killed renamable $x9
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    ADJCALLSTACKDOWN 0, 0, implicit-def dead $x2, implicit $x2
    $x10 = ADDI %stack.1, 0
    PseudoCALL target-flags(riscv-call) @_Z7callee0Pi, csr_ilp32_lp64, implicit-def dead $x1, implicit $x10, implicit-def $x2
    ADJCALLSTACKUP 0, 0, implicit-def dead $x2, implicit $x2
    $x2 = COPY killed renamable $x19
    PseudoRET

...
