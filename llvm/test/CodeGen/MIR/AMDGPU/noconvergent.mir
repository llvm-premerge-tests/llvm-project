# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=amdgcn -run-pass none -o - %s | FileCheck %s

--- |

  define amdgpu_kernel void @use_noconvergent() {
    ret void
  }

...
---
# Completely invalid code, but it checks that noconvergent round-trips properly.
name:            use_noconvergent
registers:
body: |
  bb.0:
    ; CHECK-LABEL: name: use_noconvergent
    ; CHECK: [[DEF:%[0-9]+]]:sreg_64 = IMPLICIT_DEF
    ; CHECK-NEXT: [[SI_CALL:%[0-9]+]]:sreg_64 = SI_CALL [[DEF]], 0, csr_amdgpu
    ; CHECK-NEXT: [[SI_CALL]]:sreg_64 = noconvergent SI_CALL [[DEF]], 0, csr_amdgpu
    ; CHECK-NEXT: [[DEF1:%[0-9]+]]:sreg_32 = IMPLICIT_DEF
    ; CHECK-NEXT: %3:sreg_32 = noconvergent S_ADD_I32 [[DEF1]], 1, implicit-def $scc
    %0:sreg_64 = IMPLICIT_DEF
    %1:sreg_64 = SI_CALL %0, 0, csr_amdgpu
    %1:sreg_64 = noconvergent SI_CALL %0, 0, csr_amdgpu

    ; A well-formed but redundant occurrence of the noconvergent flag.
    %2:sreg_32 = IMPLICIT_DEF
    %3:sreg_32 = noconvergent S_ADD_I32 %2, 1, implicit-def $scc
...
