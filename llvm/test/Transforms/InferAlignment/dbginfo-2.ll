; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -passes=infer-alignment -S < %s | FileCheck %s

define void @combine_metadata_dominance1(ptr %p) {
; CHECK-LABEL: define void @combine_metadata_dominance1
; CHECK-SAME: (ptr [[P:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[A:%.*]] = load ptr, ptr [[P]], align 8, !align !0
; CHECK-NEXT:    br label [[BB1:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    [[B:%.*]] = load ptr, ptr [[P]], align 8, !align !1
; CHECK-NEXT:    store i32 0, ptr [[A]], align 8
; CHECK-NEXT:    store i32 0, ptr [[B]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %a = load ptr, ptr %p, !align !2
  br label %bb1

bb1:
  %b = load ptr, ptr %p, !align !3
  store i32 0, ptr %a
  store i32 0, ptr %b
  ret void
}

define void @combine_metadata_dominance2(ptr %p) {
; CHECK-LABEL: define void @combine_metadata_dominance2
; CHECK-SAME: (ptr [[P:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[A:%.*]] = load ptr, ptr [[P]], align 8, !align !0, !noundef !2
; CHECK-NEXT:    br label [[BB1:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    [[B:%.*]] = load ptr, ptr [[P]], align 8, !align !1
; CHECK-NEXT:    store i32 0, ptr [[A]], align 8
; CHECK-NEXT:    store i32 0, ptr [[B]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %a = load ptr, ptr %p, !align !2, !noundef !1
  br label %bb1

bb1:
  %b = load ptr, ptr %p, !align !3
  store i32 0, ptr %a
  store i32 0, ptr %b
  ret void
}

!0 = !{}
!1 = !{}
!2 = !{i64 8}
!3 = !{i64 4}
