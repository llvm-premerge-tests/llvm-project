; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt -passes=infer-alignment -S < %s | FileCheck %s

define void @alignment_sustain() {
; CHECK-LABEL: define void @alignment_sustain() {
; CHECK-NEXT:    [[ALLOCA:%.*]] = alloca <vscale x 4 x i32>, align 16
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr <vscale x 4 x i32>, ptr [[ALLOCA]], i32 0
; CHECK-NEXT:    [[LOAD:%.*]] = load <4 x i32>, ptr [[GEP]], align 16
; CHECK-NEXT:    store <4 x i32> zeroinitializer, ptr [[GEP]], align 16
; CHECK-NEXT:    ret void
;
  %alloca = alloca <vscale x 4 x i32>
  %gep = getelementptr <vscale x 4 x i32>, ptr %alloca, i32 0

  %load = load <4 x i32>, ptr %gep, align 16
  store <4 x i32> zeroinitializer, ptr %gep, align 16

  ret void
}

define void @alignment_increase() {
; CHECK-LABEL: define void @alignment_increase() {
; CHECK-NEXT:    [[ALLOCA:%.*]] = alloca <vscale x 8 x i32>, align 32
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr <vscale x 8 x i32>, ptr [[ALLOCA]], i32 0
; CHECK-NEXT:    [[LOAD:%.*]] = load <8 x i32>, ptr [[GEP]], align 32
; CHECK-NEXT:    store <8 x i32> zeroinitializer, ptr [[GEP]], align 32
; CHECK-NEXT:    ret void
;
  %alloca = alloca <vscale x 8 x i32>
  %gep = getelementptr <vscale x 8 x i32>, ptr %alloca, i32 0

  %load = load <8 x i32>, ptr %gep, align 16
  store <8 x i32> zeroinitializer, ptr %gep, align 16

  ret void
}
