; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt < %s -passes=infer-alignment -S | FileCheck %s
target triple = "i386-apple-darwin9.6"

%struct.Key = type { { i32, i32 } }

define i32 @bar(i64 %key_token2) nounwind {
; CHECK-LABEL: define i32 @bar
; CHECK-SAME: (i64 [[KEY_TOKEN2:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[IOSPEC:%.*]] = alloca [[STRUCT_KEY:%.*]], align 8
; CHECK-NEXT:    [[RET:%.*]] = alloca i32, align 4
; CHECK-NEXT:    %"alloca point" = bitcast i32 0 to i32
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr [[STRUCT_KEY]], ptr [[IOSPEC]], i32 0, i32 0
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr { i32, i32 }, ptr [[TMP0]], i32 0, i32 0
; CHECK-NEXT:    store i32 0, ptr [[TMP1]], align 8
; CHECK-NEXT:    [[TMP2:%.*]] = getelementptr { i32, i32 }, ptr [[TMP0]], i32 0, i32 1
; CHECK-NEXT:    store i32 0, ptr [[TMP2]], align 4
; CHECK-NEXT:    [[TMP3:%.*]] = getelementptr [[STRUCT_KEY]], ptr [[IOSPEC]], i32 0, i32 0
; CHECK-NEXT:    store i64 [[KEY_TOKEN2]], ptr [[TMP3]], align 8
; CHECK-NEXT:    [[TMP4:%.*]] = call i32 (...) @foo(ptr byval([[STRUCT_KEY]]) align 4 [[IOSPEC]], ptr [[RET]]) #[[ATTR0]]
; CHECK-NEXT:    [[TMP5:%.*]] = load i32, ptr [[RET]], align 4
; CHECK-NEXT:    ret i32 [[TMP5]]
;
entry:
  %iospec = alloca %struct.Key		; <ptr> [#uses=3]
  %ret = alloca i32		; <ptr> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32		; <i32> [#uses=0]
  %0 = getelementptr %struct.Key, ptr %iospec, i32 0, i32 0		; <ptr> [#uses=2]
  %1 = getelementptr { i32, i32 }, ptr %0, i32 0, i32 0		; <ptr> [#uses=1]
  store i32 0, ptr %1, align 4
  %2 = getelementptr { i32, i32 }, ptr %0, i32 0, i32 1		; <ptr> [#uses=1]
  store i32 0, ptr %2, align 4
  %3 = getelementptr %struct.Key, ptr %iospec, i32 0, i32 0		; <ptr> [#uses=1]
  store i64 %key_token2, ptr %3, align 4
  %4 = call i32 (...) @foo(ptr byval(%struct.Key) align 4 %iospec, ptr %ret) nounwind		; <i32> [#uses=0]
  %5 = load i32, ptr %ret, align 4		; <i32> [#uses=1]
  ret i32 %5
}

declare i32 @foo(...)
