; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt < %s -passes=no-op-function -S  | FileCheck --check-prefixes=CHECK %s
target triple = "x86_64-unknown-linux-gnu"

declare void @llvm.assume(i1)
declare void @escape(ptr)

; Check that the alignment has been upgraded and that the assume has not
; been removed:

define i32 @foo1(ptr %a) {
; CHECK-LABEL: define i32 @foo1
; CHECK-SAME: (ptr [[A:%.*]]) {
; CHECK-NEXT:    [[T0:%.*]] = load i32, ptr [[A]], align 4
; CHECK-NEXT:    [[PTRINT:%.*]] = ptrtoint ptr [[A]] to i64
; CHECK-NEXT:    [[MASKEDPTR:%.*]] = and i64 [[PTRINT]], 31
; CHECK-NEXT:    [[MASKCOND:%.*]] = icmp eq i64 [[MASKEDPTR]], 0
; CHECK-NEXT:    tail call void @llvm.assume(i1 [[MASKCOND]])
; CHECK-NEXT:    ret i32 [[T0]]
;
  %t0 = load i32, ptr %a, align 4
  %ptrint = ptrtoint ptr %a to i64
  %maskedptr = and i64 %ptrint, 31
  %maskcond = icmp eq i64 %maskedptr, 0
  tail call void @llvm.assume(i1 %maskcond)
  ret i32 %t0
}

define i32 @foo2(ptr %a) {
; CHECK-LABEL: define i32 @foo2
; CHECK-SAME: (ptr [[A:%.*]]) {
; CHECK-NEXT:    [[PTRINT:%.*]] = ptrtoint ptr [[A]] to i64
; CHECK-NEXT:    [[MASKEDPTR:%.*]] = and i64 [[PTRINT]], 31
; CHECK-NEXT:    [[MASKCOND:%.*]] = icmp eq i64 [[MASKEDPTR]], 0
; CHECK-NEXT:    tail call void @llvm.assume(i1 [[MASKCOND]])
; CHECK-NEXT:    [[T0:%.*]] = load i32, ptr [[A]], align 4
; CHECK-NEXT:    ret i32 [[T0]]
;
  %ptrint = ptrtoint ptr %a to i64
  %maskedptr = and i64 %ptrint, 31
  %maskcond = icmp eq i64 %maskedptr, 0
  tail call void @llvm.assume(i1 %maskcond)
  %t0 = load i32, ptr %a, align 4
  ret i32 %t0
}
