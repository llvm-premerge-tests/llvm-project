; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt < %s -S -passes=no-op-function | FileCheck %s

; C source:
; struct Foo {
;   int x, y;
; };
; void escape(const ptr);
; void f(struct Foo *p) {
;   struct Foo local;
;   *(__int64 *)&local = *(__int64 *)p;
;   escape(&local);
; }

; ModuleID = '<stdin>'
source_filename = "t.c"
target triple = "x86_64-pc-windows-msvc19.11.25508"

%struct.Foo = type { i32, i32 }

define void @f(ptr %p) {
; CHECK-LABEL: define void @f
; CHECK-SAME: (ptr [[P:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[LOCAL:%.*]] = alloca [[STRUCT_FOO:%.*]], align 4
; CHECK-NEXT:    [[TMP0:%.*]] = load i64, ptr [[P]], align 8
; CHECK-NEXT:    store i64 [[TMP0]], ptr [[LOCAL]], align 4
; CHECK-NEXT:    call void @escape(ptr [[LOCAL]])
; CHECK-NEXT:    ret void
;
entry:
  %local = alloca %struct.Foo, align 4
  %0 = load i64, ptr %p, align 8
  store i64 %0, ptr %local, align 4
  call void @escape(ptr %local)
  ret void
}

declare void @escape(ptr)
