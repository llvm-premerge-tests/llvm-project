; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mtriple=aarch64-unknown-linux-gnu -mattr=+sme -S -passes=inline < %s | FileCheck %s

declare void @inlined_normal_body();
declare void @inlined_shared_za_body() "aarch64_pstate_za_shared";
declare void @inlined_new_za_body() "aarch64_pstate_za_new";

define void @normal_callee() {
; CHECK-LABEL: @normal_callee(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @inlined_normal_body()
; CHECK-NEXT:    ret void
;
entry:
  call void @inlined_normal_body()
  ret void
}

define void @shared_za_callee() "aarch64_pstate_za_shared" {
; CHECK-LABEL: @shared_za_callee(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @inlined_shared_za_body()
; CHECK-NEXT:    ret void
;
entry:
  call void @inlined_shared_za_body()
  ret void
}

define void @new_za_callee() "aarch64_pstate_za_new" {
; CHECK-LABEL: @new_za_callee(
; CHECK-NEXT:    call void @inlined_new_za_body()
; CHECK-NEXT:    ret void
;
  call void @inlined_new_za_body()
  ret void
}

define void @normal_caller_normal_callee_inline() {
; CHECK-LABEL: @normal_caller_normal_callee_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @inlined_normal_body()
; CHECK-NEXT:    ret void
;
entry:
  call void @normal_callee()
  ret void
}

define void @normal_caller_new_za_callee_dont_inline() {
; CHECK-LABEL: @normal_caller_new_za_callee_dont_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @new_za_callee()
; CHECK-NEXT:    ret void
;
entry:
  call void @new_za_callee()
  ret void
}

define void @new_za_caller_normal_callee_dont_inline() "aarch64_pstate_za_new" {
; CHECK-LABEL: @new_za_caller_normal_callee_dont_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @normal_callee()
; CHECK-NEXT:    ret void
;
entry:
  call void @normal_callee()
  ret void
}

define void @new_za_caller_shared_za_callee_inline() "aarch64_pstate_za_new" {
; CHECK-LABEL: @new_za_caller_shared_za_callee_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @inlined_shared_za_body()
; CHECK-NEXT:    ret void
;
entry:
  call void @shared_za_callee()
  ret void
}

define void @new_za_caller_new_za_callee_dont_inline() "aarch64_pstate_za_new" {
; CHECK-LABEL: @new_za_caller_new_za_callee_dont_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @new_za_callee()
; CHECK-NEXT:    ret void
;
entry:
  call void @new_za_callee()
  ret void
}

define void @shared_za_caller_normal_callee_dont_inline() "aarch64_pstate_za_shared" {
; CHECK-LABEL: @shared_za_caller_normal_callee_dont_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @normal_callee()
; CHECK-NEXT:    ret void
;
entry:
  call void @normal_callee()
  ret void
}

define void @shared_za_caller_shared_za_callee_inline() "aarch64_pstate_za_shared" {
; CHECK-LABEL: @shared_za_caller_shared_za_callee_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @inlined_shared_za_body()
; CHECK-NEXT:    ret void
;
entry:
  call void @shared_za_callee()
  ret void
}

define void @shared_za_caller_new_za_callee_dont_inline() "aarch64_pstate_za_shared" {
; CHECK-LABEL: @shared_za_caller_new_za_callee_dont_inline(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @new_za_callee()
; CHECK-NEXT:    ret void
;
entry:
  call void @new_za_callee()
  ret void
}
