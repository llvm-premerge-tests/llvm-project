; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-globals
; RUN: opt < %s -passes='cgscc(inline)' -S | FileCheck %s

;; Ensure that inlining propagates unwindabort as expected:
;;
;; Unwindabort on a callsite attaches to all calls inlined through it.
;;
;; A nounwind callsite propagates nounwind to calls inlined through
;; it, except that an unwindabort inner call cannot be deduced to be
;; nounwind, as it's unwind doesn't propagate out.
declare void @extern()
declare void @extern_nounwind() nounwind
declare i32 @__gxx_personality_v0(...)

define internal void @inlined_callee() personality ptr @__gxx_personality_v0 {
entry:
  call void @extern()
  call void @extern_nounwind() nounwind
  call unwindabort void @extern()
  call unwindabort void @extern_nounwind() nounwind
  ret void
}

define void @caller() {
;
; CHECK-LABEL: @caller(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @extern()
; CHECK-NEXT:    call void @extern_nounwind() #[[ATTR0:[0-9]+]]
; CHECK-NEXT:    call unwindabort void @extern()
; CHECK-NEXT:    call unwindabort void @extern_nounwind() #[[ATTR0]]
; CHECK-NEXT:    ret void
;
entry:
  call void @inlined_callee()
  ret void
}

define void @nounwind_caller() {
;
; CHECK-LABEL: @nounwind_caller(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call void @extern() #[[ATTR0]]
; CHECK-NEXT:    call void @extern_nounwind() #[[ATTR0]]
; CHECK-NEXT:    call unwindabort void @extern()
; CHECK-NEXT:    call unwindabort void @extern_nounwind() #[[ATTR0]]
; CHECK-NEXT:    ret void
;
entry:
  call void @inlined_callee() nounwind
  ret void
}

define void @unwindabort_caller() personality ptr @__gxx_personality_v0 {
;
; CHECK-LABEL: @unwindabort_caller(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call unwindabort void @extern()
; CHECK-NEXT:    call unwindabort void @extern_nounwind() #[[ATTR0]]
; CHECK-NEXT:    call unwindabort void @extern()
; CHECK-NEXT:    call unwindabort void @extern_nounwind() #[[ATTR0]]
; CHECK-NEXT:    ret void
;
entry:
  call unwindabort void @inlined_callee()
  ret void
}

define void @unwindabort_nounwind_caller() personality ptr @__gxx_personality_v0 {
;
; CHECK-LABEL: @unwindabort_nounwind_caller(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    call unwindabort void @extern() #[[ATTR0]]
; CHECK-NEXT:    call unwindabort void @extern_nounwind() #[[ATTR0]]
; CHECK-NEXT:    call unwindabort void @extern()
; CHECK-NEXT:    call unwindabort void @extern_nounwind() #[[ATTR0]]
; CHECK-NEXT:    ret void
;
entry:
  call unwindabort void @inlined_callee() nounwind
  ret void
}

;.
; CHECK: attributes #[[ATTR0]] = { nounwind }
;.
