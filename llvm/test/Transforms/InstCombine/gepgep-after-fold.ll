; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -passes=instcombine -S < %s | FileCheck %s

target datalayout = "e-m:e-p:32:32-i64:64-n32-S128"

%s1 = type [3 x [3 x i32]]
%s2 = type [3 x [3 x [3 x i32]]]

define void @test_unfold_one(ptr %x, i32 %i, i32 %j) {
; CHECK-LABEL: @test_unfold_one(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr inbounds [3 x [3 x i32]], ptr [[X:%.*]], i32 [[I:%.*]], i32 2, i32 [[J:%.*]]
; CHECK-NEXT:    store i32 1, ptr [[GEP]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %src = getelementptr inbounds %s1, ptr %x, i32 %i, i32 2
  %gep = getelementptr inbounds i32, ptr %src, i32 %j
  store i32 1, ptr %gep
  ret void
}

define void @test_unfold_one2(ptr %x, i32 %i, i32 %j) {
; CHECK-LABEL: @test_unfold_one2(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr inbounds [3 x [3 x [3 x i32]]], ptr [[X:%.*]], i32 [[I:%.*]], i32 2, i32 [[J:%.*]]
; CHECK-NEXT:    store i32 1, ptr [[GEP]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %src = getelementptr inbounds %s2, ptr %x, i32 %i, i32 2
  %gep = getelementptr inbounds [3 x i32], ptr %src, i32 %j
  store i32 1, ptr %gep
  ret void
}

define void @test_unfold_two(ptr %x, i32 %i, i32 %j) {
; CHECK-LABEL: @test_unfold_two(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr inbounds [3 x [3 x [3 x i32]]], ptr [[X:%.*]], i32 [[I:%.*]], i32 2, i32 0, i32 [[J:%.*]]
; CHECK-NEXT:    store i32 1, ptr [[GEP]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %src = getelementptr inbounds %s2, ptr %x, i32 %i, i32 2
  %gep = getelementptr inbounds i32, ptr %src, i32 %j
  store i32 1, ptr %gep
  ret void
}

define void @test_negative(ptr %x, i32 %i, i32 %j) {
; CHECK-LABEL: @test_negative(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[SRC:%.*]] = getelementptr inbounds [3 x [3 x i32]], ptr [[X:%.*]], i32 [[I:%.*]], i32 2
; CHECK-NEXT:    [[GEP:%.*]] = getelementptr inbounds [3 x i32], ptr [[SRC]], i32 [[J:%.*]]
; CHECK-NEXT:    store i32 1, ptr [[GEP]], align 4
; CHECK-NEXT:    ret void
;
entry:
  %src = getelementptr inbounds %s1, ptr %x, i32 %i, i32 2
  ; should be %gep = getelementptr inbounds [3 x i32], ptr %src, i32 0, i32 %j
  %gep = getelementptr inbounds [3 x i32], ptr %src, i32 %j
  store i32 1, ptr %gep
  ret void
}
