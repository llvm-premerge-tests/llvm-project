; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --check-attributes --check-globals
; RUN: opt < %s -passes=instcombine -S | FileCheck %s
declare double @t1(i32) readonly willreturn

;; The call is marked nounwind, even though callee is not nounwind, as
;; it would be UB to unwind from it through this nounwind
;; function. (And thus, the call can be removed due to being unused
;; and free of side effects.)
define void @t2() nounwind {
; CHECK: Function Attrs: nounwind
; CHECK-LABEL: @t2(
; CHECK-NEXT:    ret void
;
  call double @t1(i32 42)
  ret void
}

;; If a `call unwindabort` is within a nounwind function, that does
;; NOT mean the call itself must be nounwind. Due to the
;; 'unwindabort', the call will not continue to unwind.
define void @t3() nounwind personality ptr @__gxx_personality_v0 {
; CHECK: Function Attrs: nounwind
; CHECK-LABEL: @t3(
; CHECK-NEXT:    [[TMP1:%.*]] = call unwindabort double @t1(i32 42)
; CHECK-NEXT:    ret void
;
  call unwindabort double @t1(i32 42)
  ret void
}

declare i32 @__gxx_personality_v0(...)

;.
; CHECK: attributes #[[ATTR0:[0-9]+]] = { willreturn memory(read) }
; CHECK: attributes #[[ATTR1:[0-9]+]] = { nounwind }
;.
