; Test appropriate tagging of funclet for function calls generated by asan.

; RUN: opt -S -passes=asan -asan-instrumentation-with-call-threshold=0 < %s | FileCheck %s


target triple = "x86_64-pc-windows-msvc"

%struct.ABC = type { [2048 x i32] }

; CHECK-LABEL: @FuncletPersonality

; CHECK: entry:
; CHECK: call i64 @__asan_stack_malloc_8(i64 {{[0-9]+}}){{$}}

; CHECK: ehcleanup:
; CHECK: [[CleanupPad1:%[^ ]+]] = cleanuppad within none []
; CHECK: call void @"??1ABC@@QEAA@XZ"({{.*}}) [ "funclet"(token [[CleanupPad1]]) ]
; CHECK: call void @__asan_stack_free_8{{.*}} [ "funclet"(token [[CleanupPad1]]) ]


define dso_local void @FuncletPersonality() sanitize_address personality ptr @__CxxFrameHandler3 {
entry:
  %abc = alloca %struct.ABC, align 4
  %call = call noundef ptr @"??0ABC@@QEAA@XZ"(ptr noundef nonnull align 4 dereferenceable(8192) %abc)
  invoke void @"?may_throw@@YAXXZ"()
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1ABC@@QEAA@XZ"(ptr noundef nonnull align 4 dereferenceable(8192) %abc)
  ret void

ehcleanup:                                        ; preds = %entry
  %0 = cleanuppad within none []
  call void @"??1ABC@@QEAA@XZ"(ptr noundef nonnull align 4 dereferenceable(8192) %abc) [ "funclet"(token %0) ]
  cleanupret from %0 unwind to caller
}

declare dso_local noundef ptr @"??0ABC@@QEAA@XZ"(ptr noundef nonnull returned align 4 dereferenceable(8192)) unnamed_addr
declare dso_local void @"??1ABC@@QEAA@XZ"(ptr noundef nonnull align 4 dereferenceable(8192)) unnamed_addr nounwind
declare dso_local void @"?may_throw@@YAXXZ"()

declare dso_local i32 @__CxxFrameHandler3(...)

; CHECK-LABEL: @OtherPersonality

; CHECK: entry:
; CHECK: call i64 @__asan_stack_malloc_8(i64 {{[0-9]+}}){{$}}

; CHECK: ehcleanup:
; CHECK: [[CleanupPad1:%[^ ]+]] = cleanuppad within none []
; CHECK-NOT: funclet

define dso_local void @OtherPersonality() sanitize_address personality void ()* @dummyPersonality {
entry:
  %abc = alloca %struct.ABC, align 4
  %call = call noundef ptr @"??0ABC@@QEAA@XZ"(ptr noundef nonnull align 4 dereferenceable(8192) %abc)
  invoke void @"?may_throw@@YAXXZ"()
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1ABC@@QEAA@XZ"(ptr noundef nonnull align 4 dereferenceable(8192) %abc)
  ret void

ehcleanup:                                        ; preds = %entry
  %0 = cleanuppad within none []
  call void @"??1ABC@@QEAA@XZ"(ptr noundef nonnull align 4 dereferenceable(8192) %abc)
  cleanupret from %0 unwind to caller
}


declare dso_local i32 @dummyPersonality(...)
