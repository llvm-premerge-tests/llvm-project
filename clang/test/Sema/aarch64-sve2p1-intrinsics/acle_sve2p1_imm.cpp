// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --version 2
// RUN: %clang_cc1 -triple aarch64-none-linux-gnu -target-feature +sve2 -target-feature +sme2 -fsyntax-only -verify %s

// REQUIRES: aarch64-registered-target

#include <arm_sme.h>

__attribute__((arm_streaming))
void test_svpext_lane_imm_0_3(svcount_t c) {
  svpext_lane_c8(c, -1);  // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 3]}}
  svpext_lane_c16(c, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 3]}}
  svpext_lane_c32(c, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 3]}}
  svpext_lane_c64(c, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 3]}}

  svpext_lane_c8(c, 4);  // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svpext_lane_c16(c, 4); // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svpext_lane_c32(c, 4); // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svpext_lane_c64(c, 4); // expected-error {{argument value 4 is outside the valid range [0, 3]}}
}

__attribute__((arm_streaming))
void test_svpext_lane_x2_imm_0_1(svcount_t c) {
  svpext_lane_c8_x2(c, -1);  // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 1]}}
  svpext_lane_c16_x2(c, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 1]}}
  svpext_lane_c32_x2(c, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 1]}}
  svpext_lane_c64_x2(c, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 1]}}

  svpext_lane_c8_x2(c, 2);  // expected-error {{argument value 2 is outside the valid range [0, 1]}}
  svpext_lane_c16_x2(c, 2); // expected-error {{argument value 2 is outside the valid range [0, 1]}}
  svpext_lane_c32_x2(c, 2); // expected-error {{argument value 2 is outside the valid range [0, 1]}}
  svpext_lane_c64_x2(c, 2); // expected-error {{argument value 2 is outside the valid range [0, 1]}}
}

__attribute__((arm_streaming))
void test_svpsel_lane_imm() {
  svpsel_lane_b8(svptrue_b8(),   svptrue_b8(),  0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 15]}}
  svpsel_lane_b16(svptrue_b16(), svptrue_b16(), 0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 7]}}
  svpsel_lane_b32(svptrue_b32(), svptrue_b32(), 0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 3]}}
  svpsel_lane_b64(svptrue_b64(), svptrue_b64(), 0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 1]}}

  svpsel_lane_b8(svptrue_b8(),   svptrue_b8(),  0, 16); // expected-error {{argument value 16 is outside the valid range [0, 15]}}
  svpsel_lane_b16(svptrue_b16(), svptrue_b16(), 0, 8);  // expected-error {{argument value 8 is outside the valid range [0, 7]}}
  svpsel_lane_b32(svptrue_b32(), svptrue_b32(), 0, 4);  // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svpsel_lane_b64(svptrue_b64(), svptrue_b64(), 0, 2);  // expected-error {{argument value 2 is outside the valid range [0, 1]}}

  svpsel_lane_c8(svptrue_c8(),   svptrue_b8(),  0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 15]}}
  svpsel_lane_c16(svptrue_c16(), svptrue_b16(), 0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 7]}}
  svpsel_lane_c32(svptrue_c32(), svptrue_b32(), 0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 3]}}
  svpsel_lane_c64(svptrue_c64(), svptrue_b64(), 0, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 1]}}

  svpsel_lane_c8(svptrue_c8(),   svptrue_b8(),  0, 16); // expected-error {{argument value 16 is outside the valid range [0, 15]}}
  svpsel_lane_c16(svptrue_c16(), svptrue_b16(), 0, 8);  // expected-error {{argument value 8 is outside the valid range [0, 7]}}
  svpsel_lane_c32(svptrue_c32(), svptrue_b32(), 0, 4);  // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svpsel_lane_c64(svptrue_c64(), svptrue_b64(), 0, 2);  // expected-error {{argument value 2 is outside the valid range [0, 1]}}
}

__attribute__((arm_streaming))
svcount_t test_svwhile_pn(int64_t op1, int64_t op2) {
  svwhilege_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilege_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilege_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilege_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilegt_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilegt_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilegt_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilegt_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehi_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehi_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehi_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehi_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehs_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehs_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehs_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilehs_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilele_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilele_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilele_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilele_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelo_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelo_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelo_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelo_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilels_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilels_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilels_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilels_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelt_c8(op1, op2, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelt_c16(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelt_c32(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svwhilelt_c64(op1, op2, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}

  svwhilege_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilege_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilege_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilege_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilegt_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilegt_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilegt_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilegt_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilehi_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilehi_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilehi_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilehi_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilehs_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilehs_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilehs_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilehs_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilele_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilele_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilele_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilele_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilelo_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilelo_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilelo_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilelo_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilels_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilels_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilels_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilels_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilelt_c8(op1, op2, 3);  // expected-error {{argument should be a multiple of 2}}
  svwhilelt_c16(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilelt_c32(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
  svwhilelt_c64(op1, op2, 3); // expected-error {{argument should be a multiple of 2}}
}

__attribute__((arm_streaming))
void test_svqrshr_x2(svint32x2_t zn_x2, svuint32x2_t zn_ux2) {
  svqrshr_s16_x2(zn_x2, 0);  // expected-error {{argument value 0 is outside the valid range [1, 16]}}
  svqrshr_u16_x2(zn_ux2, 0); // expected-error {{argument value 0 is outside the valid range [1, 16]}}

  svqrshr_s16_x2(zn_x2, 17);  // expected-error {{argument value 17 is outside the valid range [1, 16]}}
  svqrshr_u16_x2(zn_ux2, 17); // expected-error {{argument value 17 is outside the valid range [1, 16]}}
}

__attribute__((arm_streaming))
void test_svqrshr_32x4(svint32x4_t zn_x4, svuint32x4_t zn_ux4) {
  svqrshr_s8_x4(zn_x4, 0);  // expected-error {{argument value 0 is outside the valid range [1, 32]}}
  svqrshr_u8_x4(zn_ux4, 0); // expected-error {{argument value 0 is outside the valid range [1, 32]}}

  svqrshr_s8_x4(zn_x4, 33);  // expected-error {{argument value 33 is outside the valid range [1, 32]}}
  svqrshr_u8_x4(zn_ux4, 33); // expected-error {{argument value 33 is outside the valid range [1, 32]}}
}

__attribute__((arm_streaming))
void test_svqrshr_64x4(svint64x4_t zn_x4, svuint64x4_t zn_ux4) {
  svqrshr_s16_x4(zn_x4, 0);  // expected-error {{argument value 0 is outside the valid range [1, 64]}}
  svqrshr_u16_x4(zn_ux4, 0); // expected-error {{argument value 0 is outside the valid range [1, 64]}}

  svqrshr_s16_x4(zn_x4, 65);  // expected-error {{argument value 65 is outside the valid range [1, 64]}}
  svqrshr_u16_x4(zn_ux4, 65); // expected-error {{argument value 65 is outside the valid range [1, 64]}}
}

__attribute__((arm_streaming_compatible))
void test_svqrshrn_x2(svint32x2_t zn_x2, svuint32x2_t zn_ux2) {
  svqrshrn_s16_x2(zn_x2, 0);  // expected-error {{argument value 0 is outside the valid range [1, 16]}}
  svqrshrn_u16_x2(zn_ux2, 0); // expected-error {{argument value 0 is outside the valid range [1, 16]}}

  svqrshrn_s16_x2(zn_x2, 17);  // expected-error {{argument value 17 is outside the valid range [1, 16]}}
  svqrshrn_u16_x2(zn_ux2, 17); // expected-error {{argument value 17 is outside the valid range [1, 16]}}
}

__attribute__((arm_streaming))
void test_svqrshrn_32x4(svint32x4_t zn_x4, svuint32x4_t zn_ux4) {
  svqrshrn_s8_x4(zn_x4, 0);  // expected-error {{argument value 0 is outside the valid range [1, 32]}}
  svqrshrn_u8_x4(zn_ux4, 0); // expected-error {{argument value 0 is outside the valid range [1, 32]}}

  svqrshrn_s8_x4(zn_x4, 33);  // expected-error {{argument value 33 is outside the valid range [1, 32]}}
  svqrshrn_u8_x4(zn_ux4, 33); // expected-error {{argument value 33 is outside the valid range [1, 32]}}
}

__attribute__((arm_streaming))
void test_svqrshrn_64x4(svint64x4_t zn_x4, svuint64x4_t zn_ux4) {
  svqrshrn_s16_x4(zn_x4, 0);  // expected-error {{argument value 0 is outside the valid range [1, 64]}}
  svqrshrn_u16_x4(zn_ux4, 0); // expected-error {{argument value 0 is outside the valid range [1, 64]}}

  svqrshrn_s16_x4(zn_x4, 65);  // expected-error {{argument value 65 is outside the valid range [1, 64]}}
  svqrshrn_u16_x4(zn_ux4, 65); // expected-error {{argument value 65 is outside the valid range [1, 64]}}
}

__attribute__((arm_streaming))
void test_svqrshru(svint32x2_t zn_x2, svint32x4_t zn_32x4, svint64x4_t zn_64x4) {
  svsqrshru_u16_x2(zn_x2, 0);   // expected-error {{argument value 0 is outside the valid range [1, 16]}}
  svsqrshru_u8_x4(zn_32x4, 0);  // expected-error {{argument value 0 is outside the valid range [1, 32]}}
  svsqrshru_u16_x4(zn_64x4, 0); // expected-error {{argument value 0 is outside the valid range [1, 64]}}

  svsqrshru_u16_x2(zn_x2, 17);   // expected-error {{argument value 17 is outside the valid range [1, 16]}}
  svsqrshru_u8_x4(zn_32x4, 33);  // expected-error {{argument value 33 is outside the valid range [1, 32]}}
  svsqrshru_u16_x4(zn_64x4, 65); // expected-error {{argument value 65 is outside the valid range [1, 64]}}
}

__attribute__((arm_streaming_compatible))
void test_svqrshrun_x2(svint32x2_t zn_x2) {
  svsqrshrun_u16_x2(zn_x2, 0); // expected-error {{argument value 0 is outside the valid range [1, 16]}}

  svsqrshrun_u16_x2(zn_x2, 17); // expected-error {{argument value 17 is outside the valid range [1, 16]}}
}

__attribute__((arm_streaming))
void test_svqrshrun_32x4(svint32x4_t zn_x4, svuint32x4_t zn_ux4) {
  svsqrshrun_u8_x4(zn_x4, 0); // expected-error {{argument value 0 is outside the valid range [1, 32]}}

  svsqrshrun_u8_x4(zn_x4, 33); // expected-error {{argument value 33 is outside the valid range [1, 32]}}
}

__attribute__((arm_streaming))
void test_svqrshrun_64x4(svint64x4_t zn_x4, svuint64x4_t zn_ux4) {
  svsqrshrun_u16_x4(zn_x4, 0); // expected-error {{argument value 0 is outside the valid range [1, 64]}}

  svsqrshrun_u16_x4(zn_x4, 65); // expected-error {{argument value 65 is outside the valid range [1, 64]}}
}

__attribute__((arm_streaming))
void test_cntp(svcount_t c) {
  svcntp_c8(c, 6);  // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svcntp_c16(c, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svcntp_c32(c, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}
  svcntp_c64(c, 6); // expected-error {{argument value 6 is outside the valid range [2, 4]}}

  svcntp_c8(c, 3);  // expected-error {{argument should be a multiple of 2}}
  svcntp_c16(c, 3); // expected-error {{argument should be a multiple of 2}}
  svcntp_c32(c, 3); // expected-error {{argument should be a multiple of 2}}
  svcntp_c64(c, 3); // expected-error {{argument should be a multiple of 2}}
}

__attribute__((arm_streaming_compatible))
void test_svdot_lane_2way(svint32_t s32, svuint32_t u32, svint16_t s16, svuint16_t u16,
                          svfloat32_t f32, svfloat16_t f16) {
  svdot_lane_s32_s16_s16(s32, s16, s16, 4); // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svdot_lane_u32_u16_u16(u32, u16, u16, 4); // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svdot_lane_f32_f16_f16(f32, f16, f16, 4); // expected-error {{argument value 4 is outside the valid range [0, 3]}}
}


__attribute__((target("+sve2p1+b16b16")))
void test_svbfml_lane(svbfloat16_t zda, svbfloat16_t zn, svbfloat16_t zm){
  svmla_lane_bf16(zda, zn, zm, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 7]}}
  svmla_lane_bf16(zda, zn, zm, 8);  // expected-error {{argument value 8 is outside the valid range [0, 7]}}
  svmls_lane_bf16(zda, zn, zm, -1); // expected-error {{argument value 18446744073709551615 is outside the valid range [0, 7]}}
  svmls_lane_bf16(zda, zn, zm, 8);  // expected-error {{argument value 8 is outside the valid range [0, 7]}}
}

__attribute__((target("+sve2p1")))
void test_svextq_lane(svint16_t zn_i16, svint16_t zm_i16, svfloat16_t zn_f16, svfloat16_t zm_f16){
  svextq_lane_s16(zn_i16, zm_i16, -1); // expected-error {{argument value -1 is outside the valid range [0, 15]}}
  svextq_lane_f16(zn_f16, zm_f16, 16);  // expected-error {{argument value 16 is outside the valid range [0, 15]}}
}

__attribute__((target("+sve2p1")))
void test_svpmov_lane_to_pred(svint8_t zd_i8, svuint16_t zd_i16, svint32_t zd_i32, svuint64_t zd_i64){
  svpmov_lane_s8(zd_i8, 1); // expected-error {{argument value 1 is outside the valid range [0, 0]}}
  svpmov_lane_u16(zd_i16, 2);  // expected-error {{argument value 2 is outside the valid range [0, 1]}}
  svpmov_lane_s32(zd_i32, 4); // expected-error {{argument value 4 is outside the valid range [0, 3]}}
  svpmov_lane_u64(zd_i64, 8);  // expected-error {{argument value 8 is outside the valid range [0, 7]}}
}

__attribute__((target("+sve2p1")))
void test_svpmov_lane_to_vector(svint16_t zd_i16, svuint32_t zd_i32, svint64_t zd_i64, svbool_t pn){
  svpmov_lane_s16_m(zd_i16, pn, 0); // expected-error {{argument value 0 is outside the valid range [1, 1]}}
  svpmov_lane_s16_m(zd_i16, pn, 2); // expected-error {{argument value 2 is outside the valid range [1, 1]}}
  svpmov_lane_u32_m(zd_i32, pn, 0);  // expected-error {{argument value 0 is outside the valid range [1, 3]}}
  svpmov_lane_u32_m(zd_i32, pn, 4);  // expected-error {{argument value 4 is outside the valid range [1, 3]}}
  svpmov_lane_s64_m(zd_i64, pn, 0);  // expected-error {{argument value 0 is outside the valid range [1, 7]}}
  svpmov_lane_s64_m(zd_i64, pn, 8);  // expected-error {{argument value 8 is outside the valid range [1, 7]}}
}
