# -*- Python -*-

from lit import Test
import lit.formats
import lit.util
import os
import subprocess

clang_binary = "clang"
perf_wrapper = ""
if config.clang_bolt_mode.lower() == "instrument":
    clang_binary = config.clang_bolt_name
else:  # perf or LBR
    perf_wrapper = "%s %s/perf-helper.py perf" % (
        config.python_exe,
        config.perf_helper_dir,
    )
    if config.clang_bolt_mode.lower() == "lbr":
        perf_wrapper += " --lbr"
    perf_wrapper += " -- "

config.clang = os.path.realpath(
    lit.util.which(clang_binary, config.clang_tools_dir)
).replace("\\", "/")

config.name = "Clang Perf Training"
config.suffixes = [
    ".c",
    ".cc",
    ".cpp",
    ".m",
    ".mm",
    ".cu",
    ".ll",
    ".cl",
    ".s",
    ".S",
    ".modulemap",
    ".test",
]

use_lit_shell = os.environ.get("LIT_USE_INTERNAL_SHELL")
config.test_format = lit.formats.ShTest(use_lit_shell == "0")
config.substitutions.append(
    (
        "%clang_cpp_skip_driver",
        " %s %s --driver-mode=g++ " % (perf_wrapper, config.clang),
    )
)
config.substitutions.append(
    ("%clang_cpp", " %s %s --driver-mode=g++ " % (perf_wrapper, config.clang))
)
config.substitutions.append(
    ("%clang_skip_driver", " %s %s " % (perf_wrapper, config.clang))
)
config.substitutions.append(("%clang", " %s %s " % (perf_wrapper, config.clang)))
config.substitutions.append(("%test_root", config.test_exec_root))
