lit_config.load_config(config, '@CMAKE_CURRENT_BINARY_DIR@/cmake-bridge.cfg')

config.substitutions.append(('%{libc-linker-script}', '@CMAKE_INSTALL_PREFIX@/lib/picolibcpp.ld'))

config.substitutions.append(('%{flags}', '--sysroot=@CMAKE_INSTALL_PREFIX@'))

config.substitutions.append(('%{compile_flags}',
    '-nostdinc++ -I %{include}'
))
config.substitutions.append(('%{link_flags}',
    '-nostdlib -nostdlib++ -L %{lib} -lunwind'
    ' -lc -lm -lclang_rt.builtins -lsemihost -lcrt0-semihost'
    ' -T %{libc-linker-script}'
    ' -Wl,--defsym=__flash=0x0'
    ' -Wl,--defsym=__flash_size=0x400000'
    ' -Wl,--defsym=__ram=0x21000000'
    ' -Wl,--defsym=__ram_size=0x1000000'
    ' -Wl,--defsym=__stack_size=0x1000'
))
config.substitutions.append(('%{exec}',
    '%{executor}'
    ' --execdir %T'
    ' @LIBUNWIND_LIBCXX_PATH@/utils/run-qemu.sh'
    ' @QEMU_SYSTEM_ARM@'
    ' mps2-an385'
    ' cortex-m3'
))

import os, site
site.addsitedir(os.path.join('@LIBUNWIND_LIBCXX_PATH@', 'utils'))
import libcxx.test.params, libcxx.test.config
libcxx.test.config.configure(
    libcxx.test.params.DEFAULT_PARAMETERS,
    libcxx.test.features.DEFAULT_FEATURES,
    config,
    lit_config
)
